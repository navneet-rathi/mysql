---
- name: ansible script to take backups
  hosts: all
  gather_subset: ['date_time']
  vars:
    base_path: "E:\\deploy"
    backup_dir: "E:\\Backup"
  tasks:
    - name: Format the date
      set_fact:
        currentdate_: "{{ '%d-%m-%Y' | strftime(ansible_date_time.epoch) }}"

    - name: Display current date
      debug:
        msg: "{{ currentdate_ }}"  
    
    - name: get the directory in the deploy path
      win_find:
        paths: "{{base_path}}"  
        #patterns: "*.out"
        recurse: yes
        depth: 1
        file_type: directory  
      register: deploypath

    - name: get the deployment path
      debug:
        msg: "{{ deploypath.files | map(attribute='filename') | list  }}" 

    - name: Check if backup Directory Exists
      ansible.builtin.win_stat:
        path: "{{ backup_dir }}"
      register: dir_status

    - name: Create backup Directory if Not Exists
      ansible.builtin.win_file:
        path: "{{ backup_dir }}"
        state: directory
      when: not dir_status.stat.exists

    - name: display
      ansible.builtin.debug:
         msg: "{{ item.filename }}"
      loop: "{{ deploypath.files }}"   
      loop_control:
        label: "{{item.filename}}"

    - name: create child directory in the backup path
      ansible.builtin.win_file:
        path: "{{ backup_dir }}\\BKP_{{ currentdate_ }}\\{{ item.filename }}"
        state: directory
      loop: "{{ deploypath.files }}"
      loop_control:
        label: "{{item.filename}}"

    - name: copy directory's from source directory to destinations
      win_copy:
         src: "{{ item.path }}"
         dest: "{{ backup_dir }}\\BKP_{{ currentdate_ }}\\{{ item.filename }}"
      loop: "{{ deploypath.files }}"
      loop_control:
        label: "{{item.filename}}"  

